#!/bin/bash
#
# Compile all template files and upload all results.
#
# TODO: exit rap handler for cleanup

set -o nounset   ## set -u : exit the script if you try to use an uninitialised variable
set -o errexit   ## set -e : exit the script if any statement returns a non-true return value


. $WELDER_ROOT/libexec/priv/_helpers

playbook=$1
[ -z "$playbook" ] && __fail "Usage: x compile <playbook-name>"

__ensure_rsync
__load_config "$playbook.yml"

tmp_dir=$(pwd)/tmp
mkdir -p $tmp_dir
rm -rf $tmp_dir/*

# add launcher
cp "${WELDER_ROOT}/libexec/priv/launcher.sh" "${tmp_dir}/launcher.sh"

# rsyncs only the modules that include files/ directories
# skips setup.sh scripts and creates list of files to be compiled
# and uploaded to the server
__rsync_modules() {
  rsync -a --prune-empty-dirs --include="*/" --include="modules/*/files/**" --exclude='*' --quiet ./modules $tmp_dir
}

# Copy all "files" directories to ./tmp so they can be parsed
if [ -z "${W_SHARED_PATH-}" ]; then
  echo # do nothing
else
  cd "$W_SHARED_PATH" && __rsync_modules && cd -
fi

__rsync_modules

# fetch secrets from vaults via gopass
[ -f "vault.yml" ] && __load_secrets "vault.yml" >> "${tmp_dir}/vault.yml"
[ -f "${playbook}.vault.yml" ] && __load_secrets "${playbook}.vault.yml" >> "${tmp_dir}/vault.yml"

# source: global config
[ -f "./config.yml" ] && $WELDER_ROOT/libexec/priv/parse-config "config.yml" \
  >> "${tmp_dir}/config-variables" "export W_"
# source: global vault
[ -f "${tmp_dir}/vault.yml" ] && $WELDER_ROOT/libexec/priv/parse-config "${tmp_dir}/vault.yml" "export W_" \
  >> $tmp_dir/config-variables
# source: playbook vault via gopass
[ -f "${tmp_dir}/${playbook}.vault.yml" ] && $WELDER_ROOT/libexec/priv/parse-config "${tmp_dir}/${playbook}.vault.yml" "export W_" \
  >> $tmp_dir/config-variables
# source: playbook
$WELDER_ROOT/libexec/priv/parse-config "$playbook.yml" "export W_" W_MODULES >> $tmp_dir/config-variables


# Compile templates (if there are any *.liquid|*.j2 files)
if test -n "$(find $tmp_dir -name '*.liquid' -o -name "*.j2" -print -quit)"; then
  __info "compiling templates"
  $WELDER_ROOT/libexec/priv/compile-templates "$tmp_dir" "config.yml" "${playbook}.yml" "${tmp_dir}/vault.yml"
  __success "compiled templates"
fi

__info "uploading template files to the server"

# rsync compiled files to the server, skipping source (liquid) templates
rsync --archive --rsh "ssh -p $W_SSH_PORT" --delete --exclude="*.liquid" --exclude="*.j2" --quiet \
  $tmp_dir/ "${W_SSH_URL}:.welder/"

__success "uploading template files to the server"
